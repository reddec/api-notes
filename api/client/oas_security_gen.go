// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// HeaderAuth provides HeaderAuth security value.
	HeaderAuth(ctx context.Context, operationName string) (HeaderAuth, error)
	// QueryAuth provides QueryAuth security value.
	QueryAuth(ctx context.Context, operationName string) (QueryAuth, error)
}

func (s *Client) securityHeaderAuth(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.HeaderAuth(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"HeaderAuth\"")
	}
	req.Header.Set("X-Api-Key", t.APIKey)
	return nil
}
func (s *Client) securityQueryAuth(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.QueryAuth(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"QueryAuth\"")
	}
	q := req.URL.Query()
	q.Set("token", t.APIKey)
	req.URL.RawQuery = q.Encode()
	return nil
}
